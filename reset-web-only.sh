#!/bin/bash

# Reset Web Container Only - Complete Clean Rebuild
# This script completely resets the web container while keeping the bot and convex services running

echo "üîÑ Resetting web container with complete clean rebuild..."

# Stop and remove only the web container
echo "üì¶ Stopping web container..."
docker compose stop web-dashboard

echo "üóëÔ∏è Removing web container..."
docker compose rm -f web-dashboard

# Remove ALL web-related images to force complete rebuild
echo "üñºÔ∏è Removing all web-related images..."
docker rmi go-convex-telegram-turborepo-web-dashboard 2>/dev/null || echo "Web dashboard image not found, skipping..."
docker rmi $(docker images --filter=reference="*web*" -q) 2>/dev/null || echo "No additional web images found"

# Clean up any dangling images and build cache
echo "üßπ Cleaning up Docker build cache..."
docker builder prune -f
docker image prune -f

# Remove node_modules and package-lock to ensure fresh dependencies
echo "üì¶ Cleaning web app dependencies..."
rm -rf apps/web/node_modules
rm -rf apps/web/.next
rm -rf apps/web/package-lock.json
rm -rf apps/web/pnpm-lock.yaml

# Clean up any cached layers
echo "üóëÔ∏è Removing Docker build cache for web app..."
docker buildx prune -f

# Remove any existing build cache specifically for this project
echo "üßπ Removing project-specific build cache..."
docker builder prune --filter type=exec.cachemount -f
docker builder prune --filter type=regular -f

# Remove all build cache and system prune
echo "üßΩ Complete Docker system cleanup..."
docker system prune -af --volumes

# Rebuild and start web container with no cache
echo "üî® Rebuilding web container from scratch (no cache)..."
DOCKER_BUILDKIT=1 docker compose build --no-cache --pull web-dashboard

echo "üöÄ Starting web container..."
docker compose up web-dashboard -d

# Wait a moment for container to start
echo "‚è≥ Waiting for container to start..."
sleep 5

echo "‚úÖ Web container complete reset finished!"
echo "üîç Checking container status..."
docker compose ps

echo ""
echo "üìù Note: Bot and Convex services remain running"
echo "üåê Web app should be available at http://localhost:3000"
echo "üîß This was a complete clean rebuild - all caches cleared"

# Test the connection
echo "üß™ Testing web app connection..."
sleep 3
if curl -f -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Web app is responding!"
else
    echo "‚ö†Ô∏è  Web app may still be starting up. Check logs with: docker compose logs web-dashboard"
fi
